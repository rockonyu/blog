{"componentChunkName":"component---src-templates-posts-tsx","path":"/2020/07/JS 忍者讀後隨筆 CH3/","result":{"data":{"site":{"siteMetadata":{"title":"Austin Chang"}},"markdownRemark":{"id":"f97a6850-ca39-5b99-9e89-fe2ff4898b1d","excerpt":"簡單的筆記與紀錄額外參考，原作：忍者：JavaScript  開發技巧探秘 CH3 - 初探頭等函式：定義與引數 3.1 使用函式與否的差異為何？ JavaScript 中物件與函式有以下特性： 透過實值 (literal…","html":"<p>簡單的筆記與紀錄額外參考，原作：<a href=\"https://www.books.com.tw/products/0010701459\" target=\"_blank\">忍者：JavaScript  開發技巧探秘</a></p>\n<h2>CH3 - 初探頭等函式：定義與引數</h2>\n<h3>3.1 使用函式與否的差異為何？</h3>\n<p>JavaScript 中物件與函式有以下特性：</p>\n<ul>\n<li>透過實值 (literal) 建立</li>\n<li>指派給變數、陣列資料與其他物件的屬性</li>\n<li>作為引數傳遞給函式</li>\n<li>可以做為函式的回傳值</li>\n<li>擁有可動態建立和指派的屬性</li>\n</ul>\n<p>頭等函式的其中一個特性是可以作為引數傳遞給函式。</p>\n<p>回呼函式是設置一個預備在稍後呼叫的函式，藉由瀏覽器在事件處理階段或透過其他程式碼。</p>\n<p>JavaScript  最重要的特性之一是能夠在程式的任何地方建立函式，使程式碼更緊湊易理解，還可以避免全域命名空間被汙染 (例如箭頭函式)。</p>\n<p>ex. 使用比對器進行排序，不需要考慮排序演算法的細節：</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">var</span> values <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">7</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">8</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span>\n\nvalues<span class=\"token punctuation\">.</span><span class=\"token function\">sort</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">values<span class=\"token punctuation\">,</span> values</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> value1 <span class=\"token operator\">-</span> value2\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre></div>\n<h3>3.2 函式作為物件的有趣之處</h3>\n<p>我們將屬性附加到函式上，可以用來：</p>\n<ul>\n<li>儲存函式</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">var</span> store <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  nextId<span class=\"token operator\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span>\n  cache<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token function-variable function\">add</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">fn</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>fn<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      fn<span class=\"token punctuation\">.</span>id <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>nextId<span class=\"token operator\">++</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>cache<span class=\"token punctuation\">[</span>fn<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> fn\n      <span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">ninja</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n\n<span class=\"token function\">assert</span><span class=\"token punctuation\">(</span>store<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>ninja<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Function was safely added.\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token function\">assert</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>store<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>ninja<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"But it was only added once.\"</span><span class=\"token punctuation\">)</span></code></pre></div>\n<ul>\n<li>自我記憶函式</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">isPrime</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">value</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>isPrime<span class=\"token punctuation\">.</span>answers<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    isPrime<span class=\"token punctuation\">.</span>answers <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>isPrime<span class=\"token punctuation\">.</span>answers<span class=\"token punctuation\">[</span>value<span class=\"token punctuation\">]</span> <span class=\"token operator\">!==</span> <span class=\"token keyword\">undefined</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> isPrime<span class=\"token punctuation\">.</span>answers<span class=\"token punctuation\">[</span>value<span class=\"token punctuation\">]</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">var</span> prime <span class=\"token operator\">=</span> value <span class=\"token operator\">!==</span> <span class=\"token number\">0</span> <span class=\"token operator\">&amp;&amp;</span> value <span class=\"token operator\">!==</span> <span class=\"token number\">1</span>\n\n  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> i <span class=\"token operator\">=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> value<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>value <span class=\"token operator\">%</span> i <span class=\"token operator\">===</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      prime <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span>\n      <span class=\"token keyword\">break</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>isPrime<span class=\"token punctuation\">.</span>answers<span class=\"token punctuation\">[</span>value<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> prime<span class=\"token punctuation\">)</span> <span class=\"token comment\">// 儲存計算結果</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>pros:</p>\n<ul>\n<li>藉由取得之前計算的值改善呼叫函式的效能</li>\n<li>背景作業，不需要執行特殊請求或額外初始化</li>\n</ul>\n<p>cons:</p>\n<ul>\n<li>任何形式的暫存都式花費記憶體空間換取效能</li>\n<li>暫存不應該與業務邏輯綁在一起</li>\n<li>很難對這樣的演算法進行負載測試或測量效能，因為結果取決於之前的輸入</li>\n</ul>\n<h3>3.3 定義函式</h3>\n<ul>\n<li>函式宣告 (declaration) 與函式表達式 (expression)</li>\n<li>箭頭函式</li>\n<li>函式建構式</li>\n<li>生成器 (generator)</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// 獨立函式宣告</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">myFunctionDeclaration</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// 內部函式宣告</span>\n  <span class=\"token keyword\">function</span> <span class=\"token function\">innerFunction</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// 函式表達式與變數宣告 &amp; 指派</span>\n<span class=\"token keyword\">var</span> <span class=\"token function-variable function\">myFunc</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// 函式表達式作為回呼引數</span>\n<span class=\"token function\">myFunc</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// 函式表達式作為回傳值</span>\n  <span class=\"token keyword\">return</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 具名的函式表達式做為立即函式的一部分</span>\n<span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token function\">namedFunctionExpression</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 作為一元運作子的引數而被立即呼叫的函式表達式</span>\n<span class=\"token operator\">+</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token operator\">-</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token operator\">!</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token operator\">~</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>立即函式 (IIFE)</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>箭頭函式</p>\n<ul>\n<li>param => expression</li>\n<li>主體如果只有表達式，即是函式的回傳值</li>\n<li>如果沒有 return 敘述句，呼叫的結果是 undefined</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">var</span> values <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">7</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">8</span> <span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\nvalues<span class=\"token punctuation\">.</span><span class=\"token function\">sort</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">value1<span class=\"token punctuation\">,</span> value2</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> value1 <span class=\"token operator\">-</span> value2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h3>3.4 引數 (argument) 與函式參數 (parameter)</h3>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// 函式參數</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">skulk</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">ninja</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// 函式引數</span>\n  <span class=\"token keyword\">return</span> <span class=\"token function\">performAction</span><span class=\"token punctuation\">(</span>ninja<span class=\"token punctuation\">,</span> <span class=\"token string\">\"skulking\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>使用不定參數</p>\n<ul>\n<li>需要放在最後一個函式參數，否則會得到 Syntax Error</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">multiMax</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">first<span class=\"token punctuation\">,</span> <span class=\"token operator\">...</span>remainingNumbers</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">var</span> sorted <span class=\"token operator\">=</span> remainingNumbers<span class=\"token punctuation\">.</span><span class=\"token function\">sort</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">a<span class=\"token punctuation\">,</span> b</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> b <span class=\"token operator\">-</span> a<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">return</span> first <span class=\"token operator\">*</span> sorted<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<ul>\n<li>使用預設參數</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">performAction</span><span class=\"token punctuation\">(</span>ninja<span class=\"token punctuation\">,</span> action <span class=\"token operator\">=</span> <span class=\"token string\">\"skulking\"</span> <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> ninja <span class=\"token operator\">+</span> <span class=\"token string\">\" \"</span> <span class=\"token operator\">+</span> action<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h3>3.5 總結</h3>\n<h3>補充參考</h3>\n<ul>\n<li><a href=\"https://www.notion.so/Chapter3-df2158c43739481bafbf6a1b43709d70\">阿福的筆記</a></li>\n<li><a href=\"https://www.coderbridge.com/@waynelee2048/a58346d15d2f4100ae6eebd8ed34aff3\">阿寬的筆記</a></li>\n</ul>","frontmatter":{"title":"JS 忍者讀後隨筆 CH3","date":"2020/7/11","description":null}}},"pageContext":{"slug":"/2020/07/JS 忍者讀後隨筆 CH3/","previous":{"fields":{"slug":"/2020/07/JS 忍者讀後隨筆 CH1 & CH2/"},"frontmatter":{"title":"JS 忍者讀後隨筆 CH1 & CH2","tags":["JS Ninja"]}},"next":{"fields":{"slug":"/2020/07/JS 忍者讀後隨筆 Ch4/"},"frontmatter":{"title":"JS 忍者讀後隨筆 CH4","tags":["JS Ninja"]}}}}}