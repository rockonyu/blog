{"version":3,"sources":["webpack:///./src/templates/tags.tsx"],"names":["Tags","pageContext","data","tag","allMarkdownRemark","edges","totalCount","tagHeader","map","node","slug","fields","title","frontmatter","key","to","pageQuery"],"mappings":"2FAAA,mGAoCeA,UA/BF,SAAC,GAA0B,IAAxBC,EAAwB,EAAxBA,YAAaC,EAAW,EAAXA,KACnBC,EAAQF,EAARE,IAD8B,EAERD,EAAKE,kBAA3BC,EAF8B,EAE9BA,MAAOC,EAFuB,EAEvBA,WACTC,EAAeD,EAAN,SACE,IAAfA,EAAmB,GAAK,KADX,iBAEEH,EAFF,IAIf,OACE,YAAC,IAAD,KACE,sBAAKI,GACL,sBAEGF,EAAMG,KAAI,YAAc,IAAXC,EAAW,EAAXA,KACJC,EAASD,EAAKE,OAAdD,KACAE,EAAUH,EAAKI,YAAfD,MACR,OACE,kBAAIE,IAAKJ,GACP,YAAC,OAAD,CAAMK,GAAIL,GAAOE,QASzB,YAAC,OAAD,CAAMG,GAAG,SAAT,cAOC,IAAMC,EAAY","file":"component---src-templates-tags-tsx-2f9e79174f387bfab5e0.js","sourcesContent":["import React from \"react\"\nimport { Link, graphql } from \"gatsby\"\nimport { Layout } from \"../components\"\n\n// @ts-ignore\nconst Tags = ({ pageContext, data }) => {\n  const { tag } = pageContext\n  const { edges, totalCount } = data.allMarkdownRemark\n  const tagHeader = `${totalCount} post${\n    totalCount === 1 ? \"\" : \"s\"\n  } tagged with \"${tag}\"`\n\n  return (\n    <Layout>\n      <h1>{tagHeader}</h1>\n      <ul>\n        {/* @ts-ignore */}\n        {edges.map(({ node }) => {\n          const { slug } = node.fields\n          const { title } = node.frontmatter\n          return (\n            <li key={slug}>\n              <Link to={slug}>{title}</Link>\n            </li>\n          )\n        })}\n      </ul>\n      {/*\n        This links to a page that does not yet exist.\n        You'll come back to it!\n        */}\n      <Link to=\"/tags\">All tags</Link>\n    </Layout>\n  )\n}\n\nexport default Tags\n\nexport const pageQuery = graphql`\n  query($tag: String) {\n    allMarkdownRemark(\n      limit: 2000\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: { frontmatter: { tags: { in: [$tag] } } }\n    ) {\n      totalCount\n      edges {\n        node {\n          fields {\n            slug\n          }\n          frontmatter {\n            title\n          }\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}